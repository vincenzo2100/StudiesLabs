from  Graph import *
from GraphPath import *

def friend_path(g: Graph, f0: Any, f1: Any) -> List[Any]:
    path=GraphPath(g,f0,f1)
    return path.BFS()

graph=Graph()
graph.create_vertex(0,"VI")
graph.create_vertex(1,"RU")
graph.create_vertex(2,"PA")
graph.create_vertex(3,"CO")
graph.create_vertex(4,"CH")
graph.create_vertex(5,"RA")
graph.create_vertex(6,"SU")
graph.create_vertex(7,"KE")

graph.add(2,"0:VI","4:CH")
graph.add(2,"0:VI","1:RU")
graph.add(2,"0:VI","2:PA")
graph.add(2,"1:RU","5:RA")
graph.add(2,"1:RU","6:SU")
graph.add(2,"1:RU","0:VI")
graph.add(2,"2:PA","3:CO")
graph.add(2,"2:PA","7:KE")
graph.add(2,"3:CO","1:RU")
graph.add(2,"3:CO","0:VI")

graph2=Graph()
graph2.create_vertex(0,"A")
graph2.create_vertex(1,"B")
graph2.create_vertex(2,"C")
graph2.create_vertex(3,"D")
graph2.create_vertex(4,"E")
graph2.create_vertex(5,"F")
graph2.create_vertex(6,"G")
graph2.add(2,"0:A","1:B")
graph2.add(2,"1:B","2:C")
graph2.add(2,"1:B","3:D")
graph2.add(2,"4:E","2:C")
graph2.add(2,"4:E","3:D")
graph2.add(2,"3:D","5:F")
graph2.add(2,"5:F","6:G")

graph3=Graph()
graph3.create_vertex(0,"Giżycko")
graph3.create_vertex(1,"Kętrzyn")
graph3.create_vertex(2,"Ryn")
graph3.create_vertex(3,"Olsztyn")
graph3.create_vertex(4,"Suwałki")
graph3.create_vertex(5,"Ełk")
graph3.create_vertex(6,"Augustów")
graph3.create_vertex(7,"Wilkasy")
graph3.add(2,"0:Giżycko","7:Wilkasy")
graph3.add(2,"7:Wilkasy","1:Kętrzyn")
graph3.add(2,"0:Giżycko","2:Ryn")
graph3.add(2,"1:Kętrzyn","3:Olsztyn")
graph3.add(2,"2:Ryn","3:Olsztyn")
graph3.add(2,"0:Giżycko","4:Suwałki")
graph3.add(2,"0:Giżycko","5:Ełk")
graph3.add(2,"5:Ełk","4:Suwałki")
graph3.add(2,"6:Augustów","4:Suwałki")



print(friend_path(graph,"4:CH","7:KE"))
print(friend_path(graph2,"0:A","6:G"))
print(friend_path(graph3,"6:Augustów","3:Olsztyn"))


